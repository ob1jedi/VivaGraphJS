configManager.configs.push({
	configName:"Data", /*mandatory field, must be unique among other configs*/
	prefix:"DT1", /*mandatory field, must be unique among other configs*/
	neo4jconnection:{	
		sourceName:"local"
		,server:"http://localhost:7474"
		,username:"neo4j"
		,password:"Password@123456"
	},
	startupOptions:{
		//defaultConnection:"local", //used unless source is otherwise specified.
		startupSearch:[
		  /*{label:"SOME_LABEL", source:"NEO4J_CONNECTION, properties:[{key:"KEYNAME", value:"VALUE"}]"*/
			//{label:"Person", properties:[{key:"name", value:"Amy"}] }
			//,{"label":"ROOT"}
			//,{"label":"host"}
			//,{"label":"service"}
			//,{"label":"ipv4network"}
			//,{"label":"site"}
		],
		startupQueries:[
			//{fromEntity:"SCHEMA_ROOT", whereProperty:"name", equalsValue:"Every"}
			//{fromEntity:"SCHEMA_ROOT"}
		],
		nodeDisplayValues:[
		  /*{label:"SOME_LABEL", displayField??label, displayLabel??label},*/
			//{label:"Determiner", displayField:"name"}
		],
		nodeDisplayBody: [
		  /*{label:"SOME_LABEL", "image":"IMAGE_URL"??none, "color":"HEXVALUE"??auto, "size":30, "labelPos":"above/under/left/right"??center},*/
			{label:"host", labelPos:"right"}
			,{label:"service", image:"custom/binoculars.svg", labelPos:"right", color:"transparent"}
			,{label:"site", image:"custom/placeholder.svg" }
			,{label:"ipv4network", size:50}
			
		],
		linkDisplayValues:[
		  /*{label:"SOME_LABEL", displayField??label, displayLabel??label},*/
			{labelFrom:"Person", labelTo:"Car", type:"TEST", displayField:"Age"},
		]
	},
	viewOptions:{
		prefetchLabelSelectors:true,
		prefetchCounts:true,
		subnodes:{relations:"ifany"},
		nodeSizing:"relationCount" /*relationCount/outRelationCount/inRelationCount(increase node size based on relationships)*/
	},
	monitoringOptions: {
			pollInterval:1 /*in seconds*/
	},
	displaySettings:{
			selectorColor:"gray"
			,backgroundImage:null /*URL or, set to null for nothing*/
			,graphBackground:"linear-gradient(#002533, #00384d, #002533)" //"linear-gradient(#002533, #00384d)", //"#0e1a25",
			,highlightColor:"#99ff33"
			,focusColor:"red"
			
			,entityShape:"rect"
			,entityRgbRange:{min:40,max:140}/*The 4bit rgb range from which label colors can be automatically generated.*/			
			,entityLabelColor:"white"
			,entityBorderColor:null /*null=auto-color*/
			,entityOpacity: 0.2
			,entityPopoutTextColor:"#0077b3"
			
			,linkColor:"#ffe6cc" /*...html/hex color*/
			,linkMainTextColor:"#d9d9d9"
			,linkSubTextColor:"#ffa64d"
			,linkThickness: 3
			,linkOpacity:1
			
			,opaque:false
			,labelSizing:"fontsize" /*choices: "hyphenate" (make labels shorter) "fontsize" (make the font size smaller) "" (no sizing, labels may extend past the boundaries of the node)*/
			
			/*effects...*/
			,haze:true /*...outer node haze*/
			,highlightHaze:true /*...outer node haze*/
			,shadow:false /*...outer node shadow*/
			,glow:false /*...outer node glow*/
			,rounded:false /*...inner node shadow*/
			
			//node data...
			,showLabels:true
			,loadNodePopouts:true
			
			//link data
			,showRelationships:"on-highlight"/*showRelationships: "all/on-highlight/none" */
			,loadRelationPopouts:false
			,showRelationProperties: true
			
	}
})